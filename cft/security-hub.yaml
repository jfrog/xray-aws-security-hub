AWSTemplateFormatVersion: '2010-09-09'
Description: Xray AWS Security Hub integration

Parameters:
  S3BucketName:
    Type: String
    Default: jfrog-xray-security-hub
    Description:
      S3 bucket name for the Xray Security Hub Integration assets. This string can include
      numbers, lowercase letters, and hyphens (-). It cannot start
      or end with a hyphen (-).
    AllowedPattern: ^[0-9a-z]+([0-9a-z-]*[0-9a-z])*$
    ConstraintDescription:
      Xray Security Hub Integration bucket name can include numbers, lowercase
      letters, and hyphens (-). It cannot start or end with a hyphen (-).
  S3KeyPrefix:
    Type: String
    Default: xray-aws-security-hub
    Description:
      S3 key prefix for the Xray Security Hub Integration assets. Quick Start key prefix
      can include numbers, lowercase letters, uppercase letters, hyphens (-), and
      forward slash (/).
    AllowedPattern: ^[0-9a-zA-Z-/]*$
    ConstraintDescription:
      Xray Security Hub Integration key prefix can include numbers, lowercase letters,
      uppercase letters, hyphens (-), and forward slash (/).
  LambdaAuthorizerName:
    Type: String
    Default: XrayAuthorizer
    Description: Lambda name for the Xray Security Hub Integration lambda. This string can include
      letters, numbers, hyphens (-), or underscores (_).
    AllowedPattern: ^[0-9a-zA-Z-_]*$
    ConstraintDescription:
      Xray Security Hub Integration lambda can include letters, numbers, hyphens (-), or underscores (_).
  LambdaRequestProcessorName:
    Type: String
    Default: XrayRequestProcessor
    Description: Lambda name for the Xray Security Hub Integration lambda. This string can include
      letters, numbers, hyphens (-), or underscores (_).
    AllowedPattern: ^[0-9a-zA-Z-_]*$
    ConstraintDescription:
      Xray Security Hub Integration lambda can include letters, numbers, hyphens (-), or underscores (_).
  LambdaMappingTransformerName:
    Type: String
    Default: XrayMappingTransformer
    Description: Lambda name for the Xray Security Hub Integration lambda. This string can include
      letters, numbers, hyphens (-), or underscores (_).
    AllowedPattern: ^[0-9a-zA-Z-_]*$
    ConstraintDescription:
      Xray Security Hub Integration lambda can include letters, numbers, hyphens (-), or underscores (_).
  SourceSQSForMappingTransformerArn:
    Type: String
    Default: XraySourceQueueARN
    Description: Event source mapping name for triggering LambdaMappingTransformer.
    AllowedPattern: ^[0-9a-zA-Z-_]*$
    ConstraintDescription:
      Xray Security Hub Integration lambda can include letters, numbers, hyphens (-), or underscores (_).

Resources:
  LambdaStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://${S3BucketName}.s3.${AWS::Region}.${AWS::URLSuffix}/${S3KeyPrefix}/cft/lambda.yaml
      Parameters:
        LambdaAuthorizerName: !Ref LambdaAuthorizerName
        LambdaRequestProcessorName: !Ref LambdaRequestProcessorName
        LambdaMappingTransformerName: !Ref LambdaMappingTransformerName
        # Enabling creates Circular dependency between resources: [ApiGatewayStack, SQSQueueStack, LambdaStack]
        # how do we reference ARN for SQS queue other than this? Export?
        SourceSQSForMappingTransformerArn: !GetAtt SQSQueueStack.Outputs.XraySourceQueueARN
    DependsOn: SQSQueueStack

  ApiGatewayStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://${S3BucketName}.s3.${AWS::Region}.${AWS::URLSuffix}/${S3KeyPrefix}/cft/api-gateway.yaml
      Parameters:
        # API Gateway doesn't interact with LambdaMappingTransformer
        LambdaAuthorizerArn: !GetAtt LambdaStack.Outputs.AuthorizerArn
        LambdaRequestProcessorArn: !GetAtt LambdaStack.Outputs.RequestProcessorArn

  SQSQueueStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://${S3BucketName}.s3.${AWS::Region}.${AWS::URLSuffix}/${S3KeyPrefix}/cft/sqs-queue.yaml
      #Parameters:
        # We need to interact only with LambdaMappingTransformer (send messages)
        #LambdaMappingTransformerArn: !GetAtt LambdaStack.Outputs.MappingTransformerArn