AWSTemplateFormatVersion: "2010-09-09"
Description: "API Gateway"

Parameters:
  LambdaAuthorizerArn:
    Type: String
    Description: Arn for the authorizer lambda
  LambdaProcessorArn:
    Type: String
    Description: Arn for the processor lambda

Resources:
  ApiCloudWatchRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - apigateway.amazonaws.com
            Action: 'sts:AssumeRole'
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs

  ApiAccount:
    Type: AWS::ApiGateway::Account
    Properties:
      CloudWatchRoleArn: !GetAtt ApiCloudWatchRole.Arn
    DependsOn: ApiRestApi

  ApiRestApi:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Description: Endpoint to ingest JFrog Xray webhook event for Security Hub integration
      EndpointConfiguration:
          Types:
            - REGIONAL
      FailOnWarnings: False
      Name: JFrog Xray ingestion

  ApiAuthorizer:
    Type: AWS::ApiGateway::Authorizer
    Properties:
      AuthorizerResultTtlInSeconds: 300
      AuthorizerUri: !Join
        - ''
        - - 'arn:'
          - !Ref AWS::Partition
          - ':apigateway:'
          - !Ref AWS::Region
          - ':lambda:path/2015-03-31/functions/'
          - !Ref LambdaAuthorizerArn
          - /invocations
      IdentitySource: method.request.header.Authorization
      Name: Xray-Webhook-Authorizer
      RestApiId: !Ref ApiRestApi
      Type: TOKEN

  ApiResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId: !GetAtt
        - ApiRestApi
        - RootResourceId
      PathPart: webhook
      RestApiId: !Ref ApiRestApi

  ApiRequestValidator:
    Type: AWS::ApiGateway::RequestValidator
    Properties:
      RestApiId: !Ref ApiRestApi
      ValidateRequestBody: True
      ValidateRequestParameters: False
  #
  # ApiEmptyModel:
  #   Type: AWS::ApiGateway::Model
  #   Properties:
  #     ContentType: 'application/json'
  #     Description: This is a default error schema model
  #     Name: Empty
  #     RestApiId: !Ref ApiRestApi
  #     Schema:
  #       $schema: http://json-schema.org/draft-04/schema#
  #       title: Error Schema
  #       type: object
  #       properties:
  #         message:
  #           type: string
  #
  # ApiErrorModel:
  #   Type: AWS::ApiGateway::Model
  #   Properties:
  #     ContentType: 'application/json'
  #     Description: This is a default empty schema model
  #     Name: Empty
  #     RestApiId: !Ref ApiRestApi
  #     Schema:
  #       $schema: http://json-schema.org/draft-04/schema#
  #       title: Empty Schema
  #       type: object

  ApiXrayWebhookModel:
    Type: AWS::ApiGateway::Model
    Properties:
      ContentType: 'application/json'
      Description: Xray webhook payload
      Name: XrayPayloadModel
      RestApiId: !Ref ApiRestApi
      Schema:
        $schema: http://json-schema.org/draft-04/schema#
        title: XrayInputModel
        type: object
        properties:
          created:
            type: string
          top_severity:
            type: string
          watch_name:
            type: string
          policy_name:
            type: string
          policy_rule:
            type: string
          issues:
            type: array
            items:
              type: object
              properties:
                severity:
                  type: string
                type:
                  type: string
                summary:
                  type: string
                description:
                  type: string
                impacted_artifacts:
                  type: array
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                      display_name:
                        type: string
                      path:
                        type: string
                      pkg_type:
                        type: string
                      sha256:
                        type: string
                      sha1:
                        type: string
                      depth:
                        type: integer
                      parent_sha:
                        type: string
                      infected_files:
                        type: array
                        items:
                          type: object
                          properties:
                            name:
                              type: string
                            path:
                              type: string
                            sha256:
                              type: string
                            depth:
                              type: integer
                            parent_sha:
                              type: string
                            display_name:
                              type: string
                            pkg_type:
                              type: string
                applicability:
                  type:
                  - string
                  - 'null'

  ApiMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: CUSTOM
      AuthorizerId: !Ref ApiAuthorizer
      HttpMethod: POST
      Integration:
        IntegrationHttpMethod: POST
        IntegrationResponses:
          - StatusCode: '204'
          - ResponseTemplates:
              application/json: |
                {
                  "message": "$input.path('$.errorMessage')"
                }
            SelectionPattern: 'Invalid Request.*'
            StatusCode: '400'
          - ResponseTemplates:
              application/json: |
                {
                  "message": "$input.path('$.errorMessage')"
                }
            SelectionPattern: 'Internal Server Error.*'
            StatusCode: '500'
        TimeoutInMillis: 5000
        Type: AWS
        Uri: !Join
          - ''
          - - 'arn:'
            - !Ref AWS::Partition
            - ':apigateway:'
            - !Ref AWS::Region
            - ':lambda:path/2015-03-31/functions/'
            - !Ref LambdaProcessorArn
            - /invocations
      MethodResponses:
        - ResponseModels:
            application/json: Empty
          StatusCode: '204'
        - ResponseModels:
            application/json: Error
          StatusCode: '400'
        - ResponseModels:
            application/json: Error
          StatusCode: '500'
      RequestModels:
        application/json: XrayPayloadModel
      RequestValidatorId: !Ref ApiRequestValidator
      ResourceId: !Ref ApiResource
      RestApiId: !Ref ApiRestApi

  ApiCloudWatchLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Join
        - ''
        - - 'API-Gateway-Execution-Logs_'
          - !Ref ApiRestApi
          - /dev
      RetentionInDays: 180

  ApiDevStage:
    Type: AWS::ApiGateway::Stage
    Properties:
      AccessLogSetting:
        DestinationArn: !GetAtt ApiCloudWatchLogGroup.Arn
        Format: >-
          {"requestId":"$context.requestId", "ip": "$context.identity.sourceIp",
          "caller":"$context.identity.caller",
          "user":"$context.identity.user","requestTime":"$context.requestTime",
          "eventType":"$context.eventType","routeKey":"$context.routeKey",
          "status":"$context.status","connectionId":"$context.connectionId"}
      Description: Dev stage
      DeploymentId: !Ref ApiDevDeployment
      RestApiId: !Ref ApiRestApi
      StageName: Dev
      TracingEnabled: True

  ApiDevDeployment:
    Type: AWS::ApiGateway::Deployment
    Properties:
      Description: Deployment to Dev stage
      RestApiId: !Ref ApiRestApi
    DependsOn: ApiMethod
